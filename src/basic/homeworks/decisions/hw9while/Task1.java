package basic.homeworks.decisions.hw9while;


/**
 * 1. сломанный лифт
 * лифт, находящийся на первом этаже здания высотой H, должен подняться на последний этаж. Лифт сломан.
 * Каждый раз он поднимается на N этажей и спускается на M этажей. Если на последнем подьеме лифт превысил
 * колличество этажей, то считается что лифт поднялся на самый верх. Найдите количество подьемов, которые понадобятся
 * лифту.
 *
 * Ввод:
 * H = 200, N = 50, M = 1
 * Ответ: 5
 * Объяснение:
 * Первый подьем: 50 - 1 = 49
 * Второй подьем: 49 + 50 - 1 = 98
 * Третий подьем: 98 + 50 - 1 = 147
 * Четвертый подьем: 147 + 50 - 1 = 196
 * Пятый подьем: выйти за пределы H.
 *
 * реализовать метод numberOfLifts(int floor, int stepUp, int stepDown)
 */
public class Task1 {

    /**
     * В данном решении используется цикл while, который выполняется до тех пор, пока лифт не достигнет верхнего
     * этажа (floor > 0). В каждой итерации цикла происходит подъем на stepUp этажей, увеличение счетчика lifts,
     * а затем, если лифт все еще находится ниже верхнего этажа, выполняется спуск на stepDown этажей.
     * Результатом работы метода numberOfLifts будет количество подъемов, необходимых лифту, чтобы достичь верхнего
     * этажа.
     */
    public static int numberOfLifts(int floor, int stepUp, int stepDown) {
        int lifts = 0; // Количество подъемов

        while (floor > 0) {
            floor -= stepUp; // Подъем на stepUp этажей
            lifts++;

            if (floor <= 0)
                break;

            floor += stepDown; // Спуск на stepDown этажей
        }

        return lifts;
    }

    public static void main(String[] args) {
        int H = 200; // Высота здания
        int N = 50;  // Количество этажей подъема
        int M = 1;   // Количество этажей спуска

        int lifts = numberOfLifts(H, N, M);
        System.out.println("Количество подъемов: " + lifts);
    }
}
