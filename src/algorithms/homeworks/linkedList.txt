реализовать класс MyLinkedList путем имплементации интерфейса Linked
дз должно содержать и интерфейс и его имплементацию.

interface Linked
-add( int data); void - добавляет элемент в конец списка
-addAt(int index, int data); void - добавляет элемент по индексу
-remove(int data); void - удаляет первое вхождение элемента в список
-removeAt(int index); void - удаляет элемент по индексу
-set(int index, int data); void - заменяет значения элемента по указанному индексу
-get(int index); int - возвращает элемент по указанному индексу
-clear(); void - удаляет все элементы, оставляет пустой список
-contains(int data); boolean - возвращает true/false - если элемент есть в списке
-isEmpty(); boolean - возвращает true/false - если в списке есть что-то.
-size(); int  - возвращает количество элементов в списке

класс MyLinkedList
поля:
Node last;
Node first;
int size;

конструкторы:
MyLinkedList()

класс Node (рквлизовать, как вложенный класс):
поля:
Node next;
Node previous;
int data;

ваша реализация должна представлять собой двусвязный НЕ круговой список.

доп задание:
Произвести дополнительную логику в методы, принимающие индекс так, чтобы к ноде можно было добраться
кратчайшим путем - от начала, если нода ближе к началу, или от конца списка, если нода ближе к концу.
Это касается методов get(int index), set(int index, int data), addAt(int index, int data), removeAt(int index)



